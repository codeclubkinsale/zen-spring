openapi: 3.0.1
info:
  title: Badge Service API
  description: This is a sample Foobar server created using springdocs - a library
    for OpenAPI 3 with spring boot.
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://springdoc.org
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8080
    description: Generated server url
tags:
  - name: Actuator
    description: Monitor and interact
    externalDocs:
      description: Spring Boot Actuator Web API Documentation
      url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
paths:
  /api/v1/badges:
    get:
      tags:
        - Badges
      operationId: all
      summary: Get all badges
      parameters:
          - name: category
            in: query
            description: ID of the object to fetch
            required: false
            schema:
              type: string
              enum:
                - programming
                - soft_skills
                - events
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelBadge'
    post:
      tags:
        - Badges
      operationId: newBadge
      summary: Create badge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Badge'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelBadge'
  /api/v1/badges/{id}:
    get:
      tags:
        - Badges
      operationId: one
      summary: Get badge by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EntityModelBadge'
    put:
      tags:
        - Badges
      operationId: complete
      summary: Update badge by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - Badges
      operationId: cancel
      summary: Delete badge by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "204":
          description: No Content
  /actuator:
    get:
      tags:
        - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "200":
          description: OK
          content:
            application/vnd.spring-boot.actuator.v3+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/vnd.spring-boot.actuator.v2+json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
  /actuator/health:
    get:
      tags:
        - Actuator
      summary: Actuator health web endpoint
      operationId: links
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
  /actuator/health/{path}:
    get:
      tags:
        - Actuator
      summary: Actuator path health web endpoint
      operationId: links
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Badge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - CANCELLED
    EntityModelBadge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        status:
          type: string
          enum:
            - IN_PROGRESS
            - COMPLETED
            - CANCELLED
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    CollectionModelEntityModelBadge:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            badgeList:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelBadge'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

  