openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Belt
  description: the Belt API
paths:
  /api/belts/{id}:
    get:
      tags:
      - Belt
      operationId: findById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: delete Tweet
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Belt'
        "404":
          description: tweet not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Belt'
    put:
      tags:
      - Belt
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Belt'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Belt'
    delete:
      tags:
      - Belt
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: No Content
  /api/belts:
    get:
      tags:
      - Belt
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: findAll
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Belt'
    post:
      tags:
      - Belt
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Belt'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Belt'
components:
  schemas:
    Belt:
      required:
      - description
      - image
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        image:
          type: string
        version:
          type: integer
          format: int32
